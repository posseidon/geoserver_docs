GEOSERVER

I. Bevezetés

GeoServer egy nyílt-forráskód alapú szoftver, amely Java programozási nyelven íródott. Lehetőséget ad térképek:
  - megosztására
  - adatszolgáltatására
  - editálására segéd javaszkript könyvtárak segítségével.
Különböző adatforrásokat tud feldolgozni mint, ESRI Shapefile, MySQL Spatial, PostgreSQL Spatial. Ezenkívül felhasználói felülete rendkívül könnyen használható, így nem igényel külön oktatást. Kliens oldali, azaz böngészőben megjelenítésért az OpenLayers javaszkript könyvtár használatát támogatják. Természetesen ettől ellehet tekinteni, mivel a térképek és azon levő adatok szolgáltatása Open Geospatial Consortium által meghatározott szabvány alapján törénik.

Azonban még mielött belemennénk a részletekbe, sokakban felmerül a kérdés, hogy miért pont GeoServer, hiszen több szempontot is megkell vizsgálni mint:
  - Sebessége: mennyi klienst tud kiszolgálni egyszerre.
  - Memória igény: mennyi memóriát igényel nagy terhelés esetén.
  - Skálázhatóság: kluszterezhetősége.
  - Cache adatok kezelése: hatékony cache algoritmusok valamint azok kezelése.
  - Konfigurálhatóság: konfigurációs feladatok komplexitása.

Ezen feltételek ismeretében kell eldöntenünk, hogy melyik térkép kiszolgáló rendszer szeretnénk alkalmazni. Jelenleg csak a nyílt-forráskódú rendszereket figyelembe véve két versenyző található:
  1. MapServer
  2. Geoserver

=============================
Mivel felhasználói felület és konfigurálhatósági szempontból egyszerűbb, ezért választjuk a GeoServer-t
=============================

II. Funkcionalitás

1. Adatformátumok:

  Támogatott adatformátumok:
    - PostGIS
	- Oracle Spatial
	- ArcSDE
	- DB2
	- MySQL
	- Shapefiles
	- GeoTIFF
	- GTOPO30
	- ECW, MrSID
	- JPEG2000

  Szabványos protokollokat támogatva a következő kimeneti formátumokat támogat:
	- KML
	- GML
	- Shapefile
	- PDF
	- GeoRSS
	- GeoJSON
	- GIF
	- JPEG
	- SVG
	- PNG
	- és még több.

In addition, one can edit data via the WFS transactional profile (WFS-T). GeoServer includes an integrated OpenLayers client for previewing data layers.

2. Szolgáltatások:
	Web szolgáltatások:
	  a. WFS - Web Feature Service.
	  b. WMS - Web Map Service.
	  c. WCS - Web Coverage Service.
	  d. VOWSS - Vitural OWS Service.

	Rest szolgáltatások:
	


2. Struktúrális felépítés:
  GeoServer főkomponense GeoTools (http://www.geotools.org). Ezenkívül, REST szolgáltatások kiszolgálására Java-n alapuló Restlet keretrendszert használ. Beépített web-szervere Jetty. GeoWebCache, egy Java alapú cache komponens, hasonló a TileCache-hez.
  Bővebb leírás az alábbi címeken:
    GeoTools
	  - http://www.geotools.org/
    Restlet
	  - http://www.restlet.org/
    Jetty
	  - http://jetty.codehaus.org/jetty/
    GeoWebCache
	  - http://geowebcache.org/



III. Telepítés

GeoServer támogatja mind a három operációs rendszert, Microsoft Windows, Linux disztribúciók, valamint OSX. Ezenkívül, WAR (Web archive) formátumban is elérhető, amely feltelepíthető meglévő alkalmazás szerverre.

1. Windows telepítés

Windows alatt kétféle módon lehet feltelepíteni: telepítő vagy bináris könyvtárak formájában.

  Telepítő használata:
	a. http://geoserver.org/display/GEOS/Download oldalon található “Windows Installer” linkre kattintva, letölthető a telepítő állomány.
	b. Letöltés után indítsuk el a telepítő alkalmazást.
    ....

  Bináris könyvtár használata:
    Előnye, hogy bármely operációs rendszeren futtatható. Leggyakrabban ezt a módszert alkalmazzák, mivel független az operációs rendszer típusától. Ez a verzió tartalmaz egy beépített Jetty servlet futtató konténert.

	a. http://geoserver.org/display/GEOS/Download oldalon, miután kiválasztottuk, hogy melyik verziót szeretnénk használni, kattintsunk rá a “Binary (OS independent)” linkre. Letöltés után, tömörítsük ki pl.: C:\Program Files\GeoServer könyvtárba.
	b. JAVA_HOME környezeti változó beállítása, ha még nincs beállítva. Ez megadja a JDK vagy JRE könyvtár elérési útvonalát, mint %JAVA_HOME%\bin\java.exe. 
		- A következő útvonalon lehet elérni a környezeti beállításokat: Control Panel -> System -> Advanced -> Environment Variables
		- System variables részben, klikkeljünk a New gombra.
		- Name: JAVA_HOME
		- Value: JDK vagy JRE könyvtár abszolút elérési útvonala.
 		- OK: háromszor.
	c. GEOSERVER_HOME környezeti változó beállítása.
		- A JAVA_HOME-hoz Hasonló módon állítsuk be a GEOSERVER_HOME elérési útvonalát is.
		- Valamint a GEOSERVER_DATA_DIR elérését is, amely a GeoServer számára szükséges adat könyvtár elérési útvonalát adja meg. Általában %GEOSERVER_HOME%\data_dir-ben érdemes létrehozni, ha fejlesztési célokra használjuk, különben egy külön meghajtóra érdemes beállítani.


	d. Futtatáshoz, GEOSERVER_HOME könyvtárban található startup.bat fájlt kell elindítani, aminek hatására megjelenik egy konzolos ablak, ahol diagnosztikai és futtatási információkat találhatunk. Ellenőrzésképpen navigáljunk el a http://localhost:8080/geoserver címre.

  Leállítás:
    Kétféleképpen lehet leállítani:
      a. GEOSERVER_HOME könyvárban található shutdown.bat elindítása.
	  b. A startup.bat hatására elindított konzol ablak bezárása.

  Eltávolítás:
	a. GeoServer leállítása.
	b. GEOSERVER_HOME könyvtár letörlése.

2. WAR telepítés

  Különálló servlet alkalmazásként telepíthető meglévő servlet konténerekbe, mint Apache Tomcat vagy Jetty. Elsődleges követelmény JAVA SE (Standard Edition). Oracle Java SE 6 verziótól érdemes használni, mivel GeoServer 2.2.x verzió nem támogatja JRE (Java futtató környezet) 5 verzióját. JDK (Java fejlesztői keretrendszer) nem szükséges GeoServer futtatásához.

  Telepítési lépések:
	a. GeoServer oldalon megtalálható WAR letöltése.
    b. Másoljuk át a geoserver.war állományt az alkalmazás konténer webapps alkalmazások könyvtárába.
    c. Az alkalmazás szerver automatikusan kicsomagolja és telepíti az alkalmazást.
    d. Ajánlott: újra indítani az alkalmazás szervert.

  Futtatás:
	Az alkalmazás sikeres telepítése után, az alkalmazás konténer adminisztrációs felületén elkell indítani az alkalmazást, ha az még nincs elindítva. Általában a következő címen lehet elérni a GeoServer-t: http://alkalmazas_container_url/geoserver . Tomcat használata esetén, a következő címen érhető el lokális gépről: http://127.0.0.1:8080/geoserver.

  Eltávolítás:
	a. Alkalmazás konténer leállítása.
	b. geoserver.war eltávolítása az webapps alkalmazás könyvtárból.
	

3. Linux telepítés (Debian)

Előkészületek:
  Figyelem: Root jogosultság szükséges.
	a. Telepítsük fel a Tomcat7 servlet konténert a rendszerre: apt-get, synaptic vagy aptitude segítségével.
	b. Kövessük a WAR telepítési útmutatóját.
	c. Másoljuk át a WAR állományt /var/lib/tomcat7/webapps könyvtárba.
	d. Indítsuk el a Tomcat7 servlet container-t.
	e. Ellenőrzés: http://127.0.0.1:8080/geoserver

IV. GeoServer Data könyvtár

GeoServer “data directory” adat könyvtár konfigurációs információk tárolására szolgál, mint:
	- milyen típusú adatok szolgáltat.
	- hol vannak az adatok eltárolva.
	- milyen szolgáltatásai vannak.
	- WMS illetve WFS szolgáltatások definíciója.
Ezenkívül tartalmaz számos alkalmazásszintű fájlokat is. Üzemi felhasználás esetén, érdemes egy külső meghajtóra tenni az adat könyvtárat egyszerű frissítés céljából. 

Felépítése:
	Mivel szinte minden konfiguráció elérhető a webes felületen keresztül, azon belül a Web Administration Interface résznél, ezért csak felületesen fogjuk tárgyalni az adat könyvtár felépítését.
	Felhasználó által módosítható könyvtárak:
		- logs
		- palettes
		- templates
		- user-projection
		- www
-------------------------------------------------------------------------
<data_directory>/

   global.xml
   logging.xml
   wms.xml
   wfs.xml
   wcs.xml

   data/
   demo/
   geosearch/
   gwc/
   layergroups/
   logs/
   palettes/
   plugIns/
   security/
   styles/
   templates/
   user_projections/
   workspaces/
     |
     +- workspace dirs...
        |
        +- datastore dirs...
           |
           +- layer dirs...
   www/
————————————————————————————————————

	1. XML állományok (global, logging, wms, wfs, wcs)
Szolgáltatásokhoz és beállításokhoz tartozó globális leíró adatokat adnak meg az aktuális GeoServer szerverről.


Fájl	      Leírás
global.xml	  Általános beállítások szolgáltatásokra, mint karakterkódolás
logging.xml	  Loggolási beállítások, mint log szint, logfile elérési útvonala, csendes mód vagy konzolra is loggoljon.
wcs.xml	      WCS szolgáltatásra vonatkozó beállítások.
wfs.xml	      WFS szolgáltatásra vonatkozó beállítások.
wms.xml	      WMS szolgáltatásra vonatkozó beállítások.

	2. Workspaces
Metaadatokat tartalmaz a kipublikált térkép rétegekről. Minden létrehozott workspace-hez tartozik egy könyvár, amelyben tárolja a hozzátartozó adatokat, mint rétegek könyvtárait, rétegenként egy layer.xml leíró fájl, valamint coverage.xml vagy featuretype.xml, attól függ, hogy az adott réteg raszteres vagy vektoros adatokat tartalmaz.

	3. Data
Geospatial adatok tárolására alkalmas könyvtár. Általában shapefile-ok, raszteres fájlok, ezenkívül bármilyen formátumok tárolására alkalmas. Könnyebb adatelérés céljából lett létrehozva a Data könyvtár, mivel egy helyen vannak a térképes állományok.
Egy catalog.xml leíró fájl tartalmazza információkat:
--------------------------------------------------------------
<datastore id="foo_shapefile">
   <connectionParams>
     <parameter name="url" value="file://C:/gis_data/foo.shp" />
   </connectionParams>
</datastore>
--------------------------------------------------------------
Ha változik a foo.shp fájl elérési útvonala, akkor csak egy helyen megváltoztatni a catalog.xml fájlban.

	4. Demo
Ebben a könyvtárban találhatóak a példa, bemutató alkalmazások.

	5. Geosearch
Ebben a könyvtárban találhatóak a KML fájlok régiókra vonatkozó adatok.

	6. GWC
GeoWebCache által létrehozott cache fájlok itt tárolódnak.

	7. Layersgroup
Konfigurációs információkat tartalmaz a megadott rétegcsoportokról.

	8. Logs
Ide kerülnek a log fájlok.

	9. Security
Bizontsági beállításokkal kapcsolatos konfigurációs fájlokat tartalmaz a Security könyvtár. Konfigurációs fájlokban meghatározhatjuk a szerepköröket, szolgáltatások, adatok hozzáférését. Ezt részletesebben fogjuk a későbbiekben tárgyalni.

	10. Styles
SLD (Styled Layer Descriptor) leíró fájlokat tartalmaz. Minden egyes fájlhoz tartozik egy catalog.xml, amely a következő képpen nézhet ki:
--------------------------------------------------------------
<style id="point_style" file="default_point.sld"/>
--------------------------------------------------------------

	11. User_projections
Ebben a könyvtárban található egy epsg.properties fájl, amelyben saját vetületi rendszert tudunk megadni, a hivatalos EPSG adatbázisban találhatókon kívül.

	12. www
Az összes fájl, amely a www könyvtár alatt van, a http://<host:port>/geoserver/www címen elérhető. Hasznos lehet, ha statikus térkép fájlokat szeretnénk szolgáltatni.

IV. Felhasználói felület
  Alapértelmezett link GeoServer-re http://localhost:8080/geoserver/web.
	1. Bejelentkezés
	Alapértelmezett felhasználói név: admin, jelszó: geoserver
	2. Szerver információk
	3. Szolgáltatások
	4. Adatforrások
	5. Réteg megtekintő

  1. Adminisztráció felület
    a. Alap információk
    Belépés után a nyitó oldalon található az alapinformációk témakör szerint csoportosítva:
		Szerverrel kapcsolatos műveletek:
			- Szerver állapota
			- Globális belállítások
			- JAI (Java Advanced Imaging) beállítások
			- Geoserver-ről alapinformációk.
		Szolgáltatások
			- WCS: Web content service
			- WFS: Web feature service
			- WMS: Web map service
		Adatok
			- Workspaces
			- Adattárolók
			- Rétegek
			- Réteg csoportok
			- Térkép stílusok

	b. Szerver információk
	Szerver állapotára vonatkozó információk tartalmazzák a konfigurációs paramétereket valamint futásidejű információkat.
	Állapot leírások:

	Lokkolások:
		Meggátolja, hogy egy adott idő pillanatban több felhasználó szerkeszthessen egy adott feature-t WFS szolgálgatáson keresztül. Adat zárás esetén, egy adott időben, csak egy WFS szerkesztő férhet hozzá az adathoz. Szerkesztés rögzítése után, adat zárás feloldódik, azaz szerkeszthetővé válik egy másik felhasználó számára. Null zárások esetén, nincs zárolás a rendszerben, ellenkező esetben a “Free locks”-al (Zárások feloldása) tudjuk felszabdítani.

	Kapcsolatok:
		Érvényes kapcsolatok száma a vektoros adattárolókhoz.
	
	Memória felhasználás:
		Geoserver által felhasznált memória terület. “Free Memory” (memória felszabadítás) linkre kattintva ürítjük ki azon memória területet, amelyet kijelölt a garbage collector.

	JVM (Java virtual machine) verzió:
		JVM verzió szám azonosítója. Például: 1.5.0

	Natív Java Advanced Imaging keretrendszer:
		Geoserver által használt Java advanced imaging a képek kirajzolására valamint szerkesztésére alkalmas keterendszer. Helyes telepítés esetén, JAI keretrendszer felgyorsíthatja a WCS valamint WMS szolgáltatások sebességét és hatékonyságát.

	JAI IMAGE IO:
		Raszteres adatok betöltésére és kódolására alkalmas keretrendszer. Helyes telepítés esetén, hasonló módon mint Native JAI esetén hatékonyságra és sebességre vonatkozó javulásokat érhetünk el.

	JAI Maximum Memory:
		Az elérhető tile cache méretét lehet megadni bájt-ban, például 333325056 bájt.

	JAI Memory Usage:
		JAI által felhasználható futás idejű memória igény beállítása tile cache szempontjából elengedhetetlen beállítás. “Free Memory” linkre kattintva kiüríthetjük a tile cache-t a memóriából.

	JAI Memory Threshold:
		Tile cache ürítés esetén memória felhasználási küszöböt ad meg százalékban, amely 0 és 100 közötti értéket vesz fel , pl. a tile cache 75%-át kell megtartani Free Memory esetén.

	JAI Tile Threads:
		JAI által felhasználható szálak száma, tile-ok kiszolgálása érdekében.

	JAI Tile Thread Priority:
		Tile ütemező szál elsőbbségi értéke, amely 1 és 10 között vehet fel értéket, valamint alapértelmezett értéke 5.

	Update Sequence:
		Szerver konfigurációs adatok változására vonatkozó számosságot határoz meg.

	Resource Cache:
		Geoserver nem cache-el adatokat, azonban adat tárolókhoz tartozó kapcsolatokat cache-el, mint feature type definíciók, external graphics, betű méretre beállítások és CRS definíciókat. “Clear” link kattintás hatására, kiüríti és felszólítja a Geoserver-t, hogy a következő teendőket hajtsa végre:
			- töltse újra az adat tárolókra vonatkozó kapcsolatokat
			- olvassa újra a raszteres állományokat
			- CRS definíicók újra töltése a ${GEOSERVER_DATA_DIR}/user_projections/epsg.properties fájl alapján.

	Configuration and Catalog:
		Geoserver minden konfigurációs adatát memóriában tárol. Ezért ha bármilyen okból megváltozott a konfigurációs állomány, “Reload” linkre kattintva, rákényszeríti a Geoserver-t, hogy az összes konfigurációs beállításait újra töltse be a könyvtár struktúrából.

	c. Réteg információk
	d. Adat könyvtár információk
	e. Szolgáltatások
	f. Cache információk
	g. Biztonsági információk


  2. Vektoros adatok
	a. Shapefile használata
	b. Postgis használata

  3. Stílus beállítások
  


IV. Konfiguráció
  >>>>Working with Application Schemas<<<<

V. Optimalizáció

VI. Felhasználási területek

VII. Fogalmak

------------------------------------------
	1. REST (Representational State Transfer) egy strukturális tervminta, amely elosztott rendszerekre lett kitalálva. Az utóbbi években, szinte felváltotta a régi megszokott web szolgáltatások mint, SOAP vagy WSDL.
    Négy alapvető művelete:
      - GET: kérés
	  - POST: küldés
      - PUT: javítás
      - DELETE: törlés

REST is an acronym for “REpresentational State Transfer”. The basic idea of REST is to rely on a fixed set of operations on named resources, where the representation of each resource is the same for retrieving and setting information. In other words, if you retrieve data in an XML format, you can send data back to the server in the same XML format to set it.

Operations on resources are implemented with the standard primitives of HTTP: GET, DELETE, PUT, POST, HEAD, etc. Each resource is represented as a standard URI.

------------------------------------------

